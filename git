git config:

git config --list // check config list
git config --global user.name “Andriy Danylko”
git config --global user.email andriy.danylko@gmail.com
git config --global push.default current // wypychaty na branch na jakomu ty znachodysia
// generate ssh ( copi key in /home/andriy/.ssh and put in git-hub)
 ssh-keygen
 
git config --global core.editor “D:\\..notepad++exe multilnst -notabbar -nosession -noPlugin”

// change repo for new folder/project
git remote set-url origin git@github.com:danj92/hajdecka.git
// rename remote repository, change push master on push origin
git remote rename master origin

git init
git status
git status --untracked-files=all // all file.ignore file also

git fetch // see if github have  any changes
git fetch --all // alternative
git diff // show changes in files
git add .  // add all changes in this folder
git add -A // add all files and changes
sudo apt-get install gitk // install graph
gitk  // show graph
git touch test.js // create file

git branch nameBranch
git checkout -b nameBranch
git checkout -b AG-roken-branch // save data another branch
git branch // check branch name
git branch -D nameBranch // delete branch nameBranch
git branch -m AG-new-name-branch // change name branch
git rm --chached index.html //exclude file from the list git

git checkout --detach // detached all branch
git branch -D production  // delete branch
git fetch origin production:production // fetch new branch
git checkout production // switch to new fetch branch

git pull --rebase origin master  // on top of remote changes impose our local
git pull origin name-branch // pull changes in this branch
git pull origin master // merge origin master(github) to current branch
git pull -X theirs origin master // merge all changes which we have conflict in local with master(github). 
				// acceptance just master(github) changes, delete my local(conflict) changes.

git push --set-upstream origin nameBranch // push changes in to nameBranch
git push -u origin master // push new project to new repo in github
git push origin nameBranch // rewrite branch
git merge origin/nameBranch
git merge --squash feature123 // merge all commit to one branch
git merge origin/master

git rebase -i origin/master // rebase changes in github to local master
	d -drop commit
	f -- add to top commit
	r -- change name commit
git rebase --abort // delete all changes what did you do using rebase -i
git rebase --continue // continue resolve conflict and do not forget  use “git add .”
git rebase --skip // skip in the middle of rebase
git rebase origin/my_branch // rebase with concrete branch (before this make git stach)

//commit change place in console NANO
Ctrl + K // copy
Ctrl + V // past

git reset --hard HEAD // delete all not commit changes
git reset --hard HEAD@{1} // which version wants to return to
git reset HEAD index.html
git reset HEAD 456882
git reset --hard 454646 // remove all to this points  454646

git reflog
git reflog --data=iso // all logs with data
git log
git log -1 // check last commit
git log --graph --decorate --oneline // show nice
git log --since2.weeks // commits for the last 2 weeks
git log --name-status HEAD^..HEAD // name of the last comic and the files we added
git log --prety=online --author= “Andriy”
git log --pretty = format: “%h” // Format
	%h -- hash
	%s -- name commit
	%ad -- data
	%an --author
example:
	git log --pretty = format: “%h- %s: %ad | [%an]” --date=short

git stash
git stash pop // add last stash and delete him
git stash list // show stash list
git stash show // the last stash  has which been added
git stash apply // add last stash to my code
git stash drop // delete last stash
git stash clear // delete all stash. Do not return them

git remote -v // check way git@github.com (pull / push)
git remote //  check repository

git rebase -i HEAD~1 // change name last commit. Is alternative --amend
git commit --amend -m “new name commit” // rewrite commit and change name
git commit -a --amend --no-edit // add file and add changes to top commit $ git push -f (change hash commit)
git revert 42559 --no-edit  // rewrite commit
git revert 42559 -m  // rewrite commit .Confirm changes write the commit name
git revert --abort

git show 87d72758a333b1aae59f0ba03d4a2f38d786b324 > diff // save changes in to file diff

//decoration script
while :
do
    clear
    git --no-pager log --graph --pretty=oneline --abbrev-commit --decorate --all $*
    sleep 1
done
